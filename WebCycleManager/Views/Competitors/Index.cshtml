@model PaginatedList<Domain.Models.Competitor>

@{
    ViewData["Title"] = "Index";
}

<h1>Renners</h1>

<p>
    <a asp-action="Create">Maak nieuw</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Zoek op naam: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Zoek" class="btn btn-default" /> |
            <a asp-action="Index">Terug naar de volledige lijst</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Team)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Country)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Team.TeamName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country.CountryNameShort)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CompetitorId">Wijzig</a> |
                <a asp-action="Details" asp-route-id="@item.CompetitorId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CompetitorId">Verwijder</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-default @prevDisabled">
    Vorige
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-default @nextDisabled">
    Volgende
</a>
